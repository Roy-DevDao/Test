﻿
@{
    Layout = "Layout_Admin";  // Layout chính mà bạn đã định nghĩa
}
@section Scripts {
    <script src="~/lib/jquery/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}

@model test2.Data.Patient

@section Styles {
    <style>
        .layout-default_body_main {
            width: 100%;
        }

        form {
            margin: 20px;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .first-text {
            font-size: xx-large;
            color: #4A5568;
            margin-bottom: 20px;
        }

        .section {
            margin-bottom: 40px;
        }

        .border {
            border-bottom: 1px solid #ccc;
            padding-bottom: 20px;
        }

        .grid-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 16px;
        }

        .grid-item {
            display: flex;
            flex-direction: column;
        }

        .grid-item-full {
            grid-column: span 2;
            display: flex;
            flex-direction: column;
        }

        label {
            font-weight: 500;
            margin-bottom: 8px;
        }

        input,
        textarea,
        select {
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            width: 100%;
            font-size: 14px;
            margin-bottom: 12px;
        }

        .flex-container {
            display: flex;
            align-items: center;
        }

        .photo-icon {
            width: 48px;
            height: 48px;
            background-color: #ccc;
            border-radius: 50%;
        }

        .change-btn {
            margin-left: 12px;
            padding: 8px 16px;
            border: 1px solid #ccc;
            background-color: #fff;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.2s;
        }

            .change-btn:hover {
                background-color: #f0f0f0;
            }

        .submit-container {
            display: flex;
            justify-content: flex-end;
            gap: 16px;
            margin-top: 20px;
        }

        button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
        }

        .cancel-btn {
            background-color: #f0f0f0;
            color: #333;
            padding: 10px 10px;
            border: 10px;
        }

        .save-btn {
            background-color: #0D6EFD;
            color: #fff;
            padding: 10px 10px;
            border: 10px;
        }

            .save-btn:hover {
                background-color: #357ABD;
            }

        .cancel-btn:hover {
            background-color: #e0e0e0;
        }
    </style>
}

<main class="layout-default_body_main">
    <form method="post" asp-action="AddPatient">
        @if (!ViewData.ModelState.IsValid)



        {
            <div class="alert alert-danger">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))



                {
                    <p>@error.ErrorMessage</p>
                }
            </div>
        }

        <!-- Phần 1: Thông tin bệnh nhân -->
        <div class="section">
            <div class="">
                <h1 class="first-text">Thông tin bệnh nhân</h1>

                <div class="grid-container">
                    <!-- Mã tài khoản -->
                    <div class="grid-item">
                        <label for="AccountId">Mã tài khoản</label>
                        <input class="form-control" id="AccountId" name="AccountId" type="text" placeholder="Mã tài khoản" value="" />
                        <span class="text-danger"></span> <!-- Hiển thị lỗi khi có -->
                    </div>
                    <div class="grid-item">
                        <label asp-for="Pid">Mã bệnh nhân</label>
                        <input asp-for="Pid" class="form-control" placeholder="Mã bệnh nhân" />
                        <span class="text-danger"></span> <!-- Hiển thị lỗi khi có -->
                    </div>

                    <!-- Họ và tên -->
                    <div class="grid-item">
                        <label asp-for="Name">Họ và tên</label>
                        <input asp-for="Name" class="form-control" placeholder="Họ và tên" />
                        <span class="text-danger"></span> <!-- Hiển thị lỗi khi có -->
                    </div>

                    <!-- Số điện thoại -->
                    <div class="grid-item">
                        <label asp-for="Phone">Số điện thoại</label>
                        <input asp-for="Phone" class="form-control" type="tel" placeholder="Số điện thoại" />
                        <span class="text-danger"></span> <!-- Hiển thị lỗi khi có -->
                    </div>

                    <!-- Giới tính -->
                    <div class="grid-item">
                        <label asp-for="Gender">Giới tính</label>
                        <select asp-for="Gender" class="form-control">
                            <option value="Nam">Nam</option>
                            <option value="Nữ">Nữ</option>
                            <option value="Khác">Khác</option>
                        </select>
                    </div>

                    <!-- Ngày sinh -->
                    @* <div class="grid-item">
                    <label asp-for="Dob">Ngày sinh</label>
                    <input asp-for="Dob" class="form-control" type="date" />
                    <span class="text-danger"></span> <!-- Hiển thị lỗi khi có -->
                    </div> *@
                    <div class="grid-item">
                        <label asp-for="Dob">Ngày sinh</label>
                        <input asp-for="Dob" class="form-control" type="date" />
                        <span class="text-danger">@Html.ValidationMessageFor(model => model.Dob)</span>
                    </div>

                </div>
            </div>
        </div>

        <!-- Nút xác nhận -->
        <div class="submit-container">
            <button type="button" class="cancel-btn" onclick="window.location.href='@Url.Action("ManagePatient", "Admin")'">Hủy</button>
            <button type="submit" class="save-btn">Lưu</button>
        </div>
    </form>
</main>
<script>
    document.getElementById("Dob").addEventListener("input", function () {
        const dob = new Date(this.value);
        const ageError = document.getElementById("age-error");

        // Kiểm tra nếu ngày sinh hợp lệ
        if (!isNaN(dob)) {
            const today = new Date();
            let age = today.getFullYear() - dob.getFullYear();
            const monthDiff = today.getMonth() - dob.getMonth();
            const dayDiff = today.getDate() - dob.getDate();

            // Điều chỉnh tuổi nếu tháng và ngày sinh chưa đến
            if (monthDiff < 0 || (monthDiff === 0 && dayDiff < 0)) {
                age--;
            }

            // Hiển thị lỗi nếu tuổi nhỏ hơn 20
            if (age < 20) {
                ageError.innerText = "Tuổi phải lớn hơn hoặc bằng 20.";
            } else {
                ageError.innerText = ""; // Xóa thông báo lỗi nếu tuổi hợp lệ
            }
        } else {
            ageError.innerText = ""; // Xóa thông báo lỗi nếu không có ngày sinh hợp lệ
        }
    });
</script>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const accountIdInput = document.getElementById('AccountId');
        const patientIdInput = document.getElementById('Pid');
        const nameInput = document.getElementById('Name');
        const phoneInput = document.getElementById('Phone');

        // Validate Account ID and Patient ID
        function validateId(inputElement, fieldName) {
            const value = inputElement.value;
            const regex = /^[A-Za-z]\d+$/; // Starts with a letter followed by digits

            if (!value) {
                showError(inputElement.id, `${fieldName} là bắt buộc.`);
            } else if (!regex.test(value)) {
                showError(inputElement.id, `${fieldName} phải bắt đầu bằng chữ cái theo sau là các chữ số.`);
            } else {
                clearError(inputElement.id);
            }
        }

        accountIdInput.addEventListener('input', function () {
            validateId(accountIdInput, 'Mã Tài Khoản');
        });

        patientIdInput.addEventListener('input', function () {
            validateId(patientIdInput, 'Mã Bệnh Nhân');
        });

        // Validate Full Name (allow Vietnamese letters)
        nameInput.addEventListener('input', function () {
            const value = nameInput.value;
            const vietnameseRegex = /^[A-Za-zÀ-ỹ\s]*$/u; // Supports Vietnamese letters and spaces

            if (!value) {
                showError('Name', 'Họ và tên là bắt buộc.');
            } else if (!vietnameseRegex.test(value)) {
                showError('Name', 'Họ và tên chỉ chứa chữ cái (bao gồm tiếng Việt).');
            } else {
                clearError('Name');
            }
        });

        // Validate Phone Number
        phoneInput.addEventListener('input', function () {
            const value = phoneInput.value;
            const phoneRegex = /^\d{10}$/; // Exactly 10 digits

            if (!value) {
                showError('Phone', 'Số điện thoại là bắt buộc.');
            } else if (!phoneRegex.test(value)) {
                showError('Phone', 'Số điện thoại phải bao gồm 10 chữ số.');
            } else {
                clearError('Phone');
            }
        });

        // Helper functions to show and clear errors
        function showError(elementId, message) {
            const errorElement = document.querySelector(`#${elementId} + .text-danger`);
            if (errorElement) {
                errorElement.textContent = message;
            }
        }

        function clearError(elementId) {
            const errorElement = document.querySelector(`#${elementId} + .text-danger`);
            if (errorElement) {
                errorElement.textContent = '';
            }
        }
    });
</script>