@{
	Layout = "Layout_Patient";

}

<div class="bg-gray-100 relative min-h-screen p-4 flex items-center justify-center">
	<div class="absolute top-[20px] w-8/12 h-[630px] bg-white shadow-lg rounded-md">
		<!-- Header -->
		<div class="flex items-center justify-between p-4 border-b border-gray-300">
			<h2 class="text-lg font-semibold">Ai Chatting</h2>
			<button class="bg-green-100 text-green-600 px-4 py-1 rounded-lg">Messages</button>
		</div>

		<!-- Messages -->
		<div id="main_chat" class="p-4 space-y-4 overflow-y-auto h-[460px]">
			<div id="introduce" class="h-full flex items-center justify-center">
				<a href="#" class="flex flex-col h-60 items-center bg-white border border-gray-200 rounded-lg shadow md:flex-row md:max-w-xl hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700">
					<img class="object-cover w-full rounded-t-lg h-96 md:h-auto md:w-48 md:rounded-none md:rounded-s-lg" src="~/assets/images/wave-waving.gif" alt="">
					<div class="flex flex-col justify-between p-4 leading-normal">
						<h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">Hello Guys</h5>
						<p class="mb-3 font-normal text-gray-700 dark:text-gray-400">I'm Apple, a health assistant. How can i help you today</p>
					</div>
				</a>

			</div>
		</div>

		<!-- Input -->
		<div class="relative flex items-center p-4">
			<input id="message" type="text"
				   class="flex-grow border border-gray-300 rounded-md px-4 py-2 pr-12 outline-none"
				   placeholder="Write your message..." />
			<button id="getDataBtn" class="absolute right-7 bg-green-500 text-white py-1.5 px-2.5 rounded-md hover:bg-green-600 focus:outline-none">
				âž¤
			</button>
		</div>
	</div>
</div>

<script>

	const mainChat = document.getElementById('main_chat');
	const button = document.getElementById('getDataBtn');
	const input = document.getElementById('message');
	// Add an event listener for the keydown event on the input field
	input.addEventListener('keydown', function (event) {
		// Check if the key pressed is "Enter"
		if (event.key === 'Enter') {
			// Trigger the button click
			button.click();
		}
	});


	// Bind a click event to the button
	$('#getDataBtn').click(function () {
		var message = $('#message').val();
		if (message.length < 2) return;
		$('#message').val("");

		function formatTime(num) {
			return num < 10 ? `0${num}` : num;
		}
		document.getElementById('introduce').classList.add('hidden');
		// Get current hour and minute
		const now = new Date();
		const hours = now.getHours();
		const minutes = formatTime(now.getMinutes());


		const messageUser = `
								<div class="flex gap-2 items-end justify-end">
						<div class="text-sm text-right">
							<p class="text-gray-500">You, ${hours}:${minutes} AM</p>
							<p class="bg-blue-100 rounded-lg p-2 mt-1 inline-block">
								${message}
							</p>
						</div>
					</div>
						`;
		mainChat.insertAdjacentHTML('beforeend', messageUser);


		const messageAi = `<div class="flex gap-2 items-start">
							<div class="w-8 h-8 rounded-full "><img src="/assets/images/apple.png" /></div>
						<div class="text-sm">
							<p id="time" class="font-semibold">Apple<span class="text-gray-500"></span></p>
								<p id="content" class="hidden max-w-2xl bg-gray-200 rounded-lg p-2 mt-1 inline-block">
								<div id="dot-loading"
									class="rounded-full h-5 w-5 bg-black animate-ping">
								</div>
							</p>
								<div id="recommend"></div>
						</div>

					</div>`
		mainChat.insertAdjacentHTML('beforeend', messageAi);
		mainChat.scrollTop = mainChat.scrollHeight;
		console.log("this is message : ", message);
		var formData = {
			message: message,
		}

		$.ajax({
			url: '/Home/getmessage',  // URL of the action method in the server
			type: 'POST',
			data: formData,
			success: function ({ content, specialties }) {
				console.log("dcm ", specialties);
				const now = new Date();
				const hours = now.getHours();
				const minutes = formatTime(now.getMinutes());
				document.getElementById("dot-loading").remove();


				typeEffect(content, specialties, hours + ":" + minutes,);




				console.log(data);
			},
			error: function (error) {
				console.log('Error:', error); // Error handling
			}
		});
	});
	function typeEffect(text, specialties, time, speed = 20) {
		let i = 0;
		const chatbox = document.getElementById("content");
		chatbox.classList.remove("hidden");
		const timebox = document.getElementById("time");

		function typing() {
			if (i < text.length) {
				chatbox.innerHTML += text.charAt(i);
				i++;
				mainChat.scrollTop = mainChat.scrollHeight;
				setTimeout(typing, speed);  // Add delay to mimic typing speed
			} else {
				console.log("func  : ", specialties);
				addRecommend(specialties);
				timebox.innerHTML = time + " AM";
				timebox.id = "";
				chatbox.id = "";
				mainChat.scrollTop = mainChat.scrollHeight;
			}

		}

		typing();  // Start the typing effect
	}

	function addRecommend(specialties) {
		if (specialties != null) {
			specialties.forEach(specialty => {
				const recom = `
							<a href="/Home/ServiceDetail/${specialty.specialtyId}" class="flex max-w-64 mt-2 items-center p-2 text-base font-bold text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 group hover:shadow dark:bg-gray-600 dark:hover:bg-gray-500 dark:text-white">
						<div class="h-16 w-16 rounded-full overflow-hidden flex items-center justify-center">
		  <img src="${specialty.specialtyImg}" class="w-full h-full object-cover" alt="Specialty Image" />
		</div>
			<span class="flex-1 ms-3 whitespace-nowrap">${specialty.specialtyName}</span>
		</a>
		`
				document.getElementById('recommend').insertAdjacentHTML('beforeend', recom);


			});
			document.getElementById('recommend').id = "";
		}
	}
	function navigateRecommend(Sid) {
		window.location.href = ``;
	}
</script>